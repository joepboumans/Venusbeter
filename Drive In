#include <Servo.h>
//Constants

const int pingPin = 9;
const float speed = 0.23;
const float rotatespeed= 0.5;
int RS=A0;
int LS=A1;
int RIGHTSERVO=13;
int LEFTSERVO=12;
int UTRASOUNDSERVO=13;
int encoderLeft=7;
int encoderRight=8;
int frontpin=A3;
int FrontLab=A2;
int k=0;
int found=0;
Servo servoLeft, servoRight, servoGripper, servoEyes;

//Functions

int CheckGroundL(int PinLoc){ //Checking left ground sensor
  if(analogRead(PinLoc)>=300){
  return 1;
  }else{
    return 0;
  }
}

int CheckGroundR(int PinLoc){ //Checking right ground sensor
  if(analogRead(PinLoc)>=400){
  return 1;
  }else{
    return 0;
  }
}

int USmeasure(int angle){
  servoEyes.write(angle); //First look at the right angle
  delay(750);
  long duration, inches, cm;
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  cm = duration / 29 / 2; //Basically, measuring the distance
  return cm;
}


int USmeasureND(int angle){     //No delay
  servoEyes.write(angle); //First look at the right angle
  long duration, inches, cm;
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  cm = duration / 29 / 2; //Basically, measuring the distance
  return cm;
}


void ForwardD(float distanceF) { //Function for going forward a certain distance & speed
  float result;
  result = (distanceF / 1) * 1000;
  servoLeft.writeMicroseconds(2000);        
  servoRight.writeMicroseconds(1000);
  delay(result);
  //Serial.println("ForwardD");
  Stop();
  delay(250);
}

void Reverse() { //going backwards
  servoLeft.write(0);
  servoRight.write(180);
}

void TurnLeftD(int degrees) { //Function for turning left at a certain degree
    float result;
    result = (degrees / (rotatespeed * 360)) * 1000;
    //Serial.println("Result computed: ");
    //Serial.print(result);
    //Serial.println("TurnLeftD");
    delay(100);
    servoLeft.write(0);
    servoRight.write(0);
    delay(result);
    Stop();
    delay(250);
}

void TurnLeft() { //Turning left until the calling function tells it to do something else
  servoLeft.write(0);
  servoRight.write(0);
  //Serial.println("TurnLeft");
}



void TurnRightD(int degrees){ //Function for turning right at a certain degree
float result;
    result = (degrees / (rotatespeed * 360)) * 1000;
    //Serial.println("Result computed: ");
    //Serial.print(result);
    //Serial.println("TurnRightD");
    delay(100);
    servoLeft.write(180);
    servoRight.write(180);
    delay(result);
    Stop();
    delay(250);
}

void TurnRight(){ //Turning left until the calling function tells it to do something else
  servoLeft.write(180);
  servoRight.write(180);
  //Serial.println("TurnRight");
}

void Stop() { //Stopping until the calling function tells it to do something else
    servoLeft.writeMicroseconds(1500);
    servoRight.writeMicroseconds(1500);
}
void Forward(){ //Forward until the calling function tells it to do something else
  servoLeft.writeMicroseconds(2000);        
  servoRight.writeMicroseconds(1000);
  //Serial.println("Forward");
}


void pickup(){
  int rock=0;
  int i=0;
  servoGripper.write(180);
  delay(750);
  while(rock<=300 && i<25){
    rock = analogRead(frontpin);
    Forward();
    delay(100);
    i++;
  }
  Stop();
  delay(100);
  servoGripper.write(0);
  delay(750);
}




void DriveIn(){
  int dist;
  int leng;
  int left,right;
  int distL,distR;
  dist=USmeasure(90);
  delay(500);
  Serial.println(dist);
  distL=USmeasure(135);
  delay(500);
  Serial.println(distL);
  distR=USmeasure(45);
  delay(500);
  Serial.println(distR);
  if(distL>=50 && distR>=50){ //entrance otherside
    dist=USmeasure(90);
    while(dist<=40){                    //Edge of the lab
      servoLeft.writeMicroseconds(1800);
      servoRight.writeMicroseconds(1800);  //Turn Right
    }
    Stop();
    delay(100);       
    ForwardD(2);     
    delay(100);
    TurnLeftD(45);
    Stop();   
    delay(100);
    ForwardD(1);     //Right side Lab
    Stop();
    delay(100);
    distL=USmeasure(180); // Ride to entrance
    while(distL<=40){
      distL=USmeasureND(180);
      Forward();
    }
    ForwardD(1);
    Stop();
    delay(100);
    TurnLeftD(90);
    Stop();
    delay(100);
    ForwardD(0.8);        //Turn into lab
    Stop();
    delay(100);
    TurnLeftD(90);
    Stop();
    delay(100);
    ForwardD(2);
    Stop();
    delay(100);
    goto Ride;
    
    
  }else if(distL<=50 && distR>=50){// Entrance Left Side 
    dist=USmeasure(90);
    while(dist>>10){            //Get close to the lab
      Forward();
      dist=USmeasureND(90);
    }
    Stop();
    delay(100);
    while(dist<=40){            //Turn to left edge
      dist=USmeasureND(90);
      servoLeft.writeMicroseconds(1200);
      servoRight.writeMicroseconds(1200);
    }
    Stop();
    delay(100);
    TurnRightD(15);
    distR=USmeasure(0);
    while(distR<=40){         //Ride to entrance
      distR=USmeasureND(0);
      Forward();
    }
    ForwardD(1);
    TurnRightD(100);
    ForwardD(2);
    TurnRightD(90);         //Turn into entrance
    ForwardD(2);
    goto Ride;
  }else if(distL>=50 && distR<=50){  //Right side lab
    dist=USmeasure(90);
    while(dist<=40){                  //Turn right to entrance
      servoLeft.writeMicroseconds(1800);
      servoRight.writeMicroseconds(1800);
    }
    Stop();
    delay(100);
    distL=USmeasure(180);
    while(distL<=40){           // Ride to entrance
      distL=USmeasureND(180);
      Forward();
    }
    Stop();
    delay(100);
    ForwardD(1);
    TurnLeftD(90);
    ForwardD(2);            //Turn into entrance
    TurnLeftD(90);
    ForwardD(2);
   

  Ride:               //Ride into lab
   left=analogRead(LS);
   right=analogRead(RS);
    while(left==0 && right ==0){
      Forward();
    }
  }
    
}

void setup() { //setting up all the servos
  servoEyes.attach(11);
  servoEyes.write(90);
  servoRight.attach(13);
  servoLeft.attach(12);
  servoGripper.attach(10);
  servoGripper.write(45);
  pinMode(encoderLeft, INPUT);
  pinMode(encoderRight,INPUT);
  pinMode(LS, INPUT);
  pinMode(RS, INPUT);
  pinMode(LEFTSERVO, OUTPUT);
  pinMode(RIGHTSERVO, OUTPUT);
  Serial.begin(9600);
  servoGripper.write(180);
}

void loop(){
  delay(1000);
  DriveIn();
  Stop();
  delay(99999);
}

