#include <Servo.h>

//Constants

const int pingPin = 9;
const float speed = 0.23;
const float rotatespeed= 0.50 ;
int RS=A0;
int LS=A1;
int RIGHTSERVO=13;
int LEFTSERVO=12;
int UTRASOUNDSERVO=13;
int encoderLeft=7;
int encoderRight=8;
int frontpin=A3;
int FrontLab=A2;
int k=0;
int found=0;
Servo servoLeft, servoRight, servoGripper, servoEyes;

//Functions

int CheckGroundL(int PinLoc){ //Checking left ground sensor
  if(analogRead(PinLoc)>=300){
  return 1;
  }else{
    return 0;
  }
}

int CheckGroundR(int PinLoc){ //Checking right ground sensor
  if(analogRead(PinLoc)>=400){
  return 1;
  }else{
    return 0;
  }
}

int USmeasure(int angle){
  servoEyes.write(angle); //First look at the right angle
  long duration, inches, cm;
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  cm = duration / 29 / 2; //Basically, measuring the distance
  return cm;
}

void ForwardD(float distanceF, float forwardspeedF) { //Function for going forward a certain distance & speed
  float result;
  result = (distanceF / forwardspeedF) * 1000;
  servoLeft.writeMicroseconds(1900);        
  servoRight.writeMicroseconds(1000);
  delay(result);
  //Serial.println("ForwardD");
}

void Reverse() { //going backwards
  servoLeft.write(0);
  servoRight.write(180);
}

void TurnLeftD(int degrees) { //Function for turning left at a certain degree
    float result;
    result = (degrees / (rotatespeed * 360)) * 1000;
    //Serial.println("Result computed: ");
    //Serial.print(result);
    //Serial.println("TurnLeftD");
    delay(100);
    servoLeft.write(0);
    servoRight.write(0);
    delay(result);
}

void TurnLeft() { //Turning left until the calling function tells it to do something else
  servoLeft.write(0);
  servoRight.write(0);
  //Serial.println("TurnLeft");
}

void TurnRightD(int degrees){ //Function for turning right at a certain degree
float result;
    result = (degrees / (rotatespeed * 360)) * 1000;
    //Serial.println("Result computed: ");
    //Serial.print(result);
    //Serial.println("TurnRightD");
    delay(100);
    servoLeft.write(180);
    servoRight.write(180);
    delay(result);
}

void TurnRight(){ //Turning left until the calling function tells it to do something else
  servoLeft.write(180);
  servoRight.write(180);
  //Serial.println("TurnRight");
}

void Stop() { //Stopping until the calling function tells it to do something else
    servoLeft.writeMicroseconds(1500);
    servoRight.writeMicroseconds(1500);
}
void Forward(){ //Forward until the calling function tells it to do something else
  servoLeft.write(115);
  servoRight.write(65);
  //Serial.println("Forward");
}


void pickup(){
  int rock=0;
  int i=0;
  servoGripper.write(180);
  delay(750);
  while(rock<=300 && i<25){
    rock = analogRead(frontpin);
    Forward();
    delay(100);
    i++;
  }
  Stop();
  delay(100);
  servoGripper.write(0);
  delay(750);
}



void setup() { //setting up all the servos
  servoEyes.attach(11);
  servoEyes.write(90);
  servoRight.attach(13);
  servoLeft.attach(12);
  servoGripper.attach(10);
  servoGripper.write(90);
  pinMode(encoderLeft, INPUT);
  pinMode(encoderRight,INPUT);
  pinMode(LS, INPUT);
  pinMode(RS, INPUT);
  pinMode(LEFTSERVO, OUTPUT);
  pinMode(RIGHTSERVO, OUTPUT);
  Serial.begin(9600);
  servoGripper.write(180);
 

}

void loop() { //constantly check for ground and hills
  int US=USmeasure(90);
  int rock = analogRead(frontpin);

  if(CheckGroundL(LS)==1 && CheckGroundR(RS)==1){ //Both sides white->go forward
    Forward();
  }
  else if(CheckGroundL(LS)!=1 && CheckGroundR(RS)!=1){ //Both sides black-> turn
    Reverse();
    delay(250);
    TurnRightD(130);
    delay(100);   
    Serial.println("Both");
  }
  else if(CheckGroundL(LS)!=1){ //Left side black -> go right
    Reverse();
    delay(250);
    TurnRightD(130);
    delay(100);      
    Serial.println("TurnRight");
  }
  else if(CheckGroundR(RS)!=1){ //Right side black -> go left
    Reverse();
    delay(250);
    TurnLeftD(130); 
    delay(100);    
    Serial.println("TurnLeft"); 
  }
 
  if(US<25){
    Stop();
    delay(100);
    TurnRight();
    delay(1000);
  }
  if(rock>=380 && found==0){
    Stop();
    delay(100);
    pickup();
    delay(300);
    servoGripper.write(0);
    delay(500);
    rock = analogRead(frontpin);
    if(rock>=400){
    found=1;
    Stop();
    delay(100);
    
  }else{
    pickup();
  }
}
if(found==1){
  
}
}
