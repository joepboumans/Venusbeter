#include <Servo.h>
//Constants
const int pingPin = 9;
const float speed = 0.23;
const float rotatespeed= 0.50 ;
int RS=A0;
int LS=A1;
int RIGHTSERVO=13;
int LEFTSERVO=12;
//int US=A0;
int UTRASOUNDSERVO=13;
int encoderLeft=7;
int encoderRight=8;
Servo servoLeft, servoRight, servoGripper, servoEyes;
//Functions

int CheckGroundL(int PinLoc){
  if(analogRead(PinLoc)>=300){
  return 1;
  }else{
    return 0;
  }
}

int CheckGroundR(int PinLoc){
  if(analogRead(PinLoc)>=400){
  return 1;
  }else{
    return 0;
  }
}

int USmeasure(int angle){
  servoEyes.write(angle);
  delay(500);
  long duration, inches, cm;
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  cm = duration / 29 / 2;
  return cm;
}

void ForwardD(float distanceF, float forwardspeedF) {
  float result;
  result = (distanceF / forwardspeedF) * 1000;
  servoLeft.writeMicroseconds(1900);         // Left wheel counterclockwise
  servoRight.writeMicroseconds(1000);
  delay(result);
  //Serial.println("ForwardD");
}

void Reverse() {
  servoLeft.write(0);
  servoRight.write(180);
}

void TurnLeftD(int degrees) {
    float result;
    result = (degrees / (rotatespeed * 360)) * 1000;
    //Serial.println("Result computed: ");
    //Serial.print(result);
    //Serial.println("TurnLeftD");
    delay(100);
    servoLeft.write(0);
    servoRight.write(0);
    delay(result);
}

void TurnLeft() {
  servoLeft.write(0);
  servoRight.write(0);
  //Serial.println("TurnLeft");
}

void TurnRightD(int degrees){
float result;
    result = (degrees / (rotatespeed * 360)) * 1000;
    //Serial.println("Result computed: ");
    //Serial.print(result);
    //Serial.println("TurnRightD");
    delay(100);
    servoLeft.write(180);
    servoRight.write(180);
    delay(result);
}

void TurnRight(){
  servoLeft.write(180);
  servoRight.write(180);
  //Serial.println("TurnRight");
}

void Stop() {
    servoLeft.write(90);
    servoRight.write(90);
}
void Forward(){
  servoLeft.write(115);
  servoRight.write(65);
  //Serial.println("Forward");
}

void Groundmovement(){
  int left,right;
  left=analogRead(LS);
  right=analogRead(RS);
  Serial.print("Left=");
  Serial.println(left);
  Serial.print("Right=");
  Serial.println(right);
  if(CheckGroundL(LS)==1 && CheckGroundR(RS)==1){
    Forward();
    Serial.println("GroundForward");
  }
  else if(CheckGroundL(LS)!=1 && CheckGroundR(RS)!=1){ 
    Reverse();
    TurnRightD(130);   
    Serial.println("GroundBoth");
  }
  else if(CheckGroundL(LS)!=1){
    Reverse();
    TurnRightD(130);   
    Serial.println("GroundRight");
  }
  else if(CheckGroundR(RS)!=1){ 
    Reverse();
    TurnLeftD(130);  
    Serial.println("GroundLeft"); 
  }
}

void Hilldodging(){
  int m = USmeasure(140);
   if(m<30){ 
    Stop();
    delay(50);
    TurnRight();
    delay(1000);
    Serial.println("HillRight");
  }
   else{
    int n = USmeasure(40);
    if (n<30){
    Stop();
    delay(50);
    TurnLeft();
    delay(1000);
    Serial.println("HillLeft");
    }
    else{
    Forward();
    Serial.println("HillForward");
    }
  }
}



void setup() {
  servoEyes.attach(11);
  servoEyes.write(90);
  servoRight.attach(13);
  servoLeft.attach(12);
  servoGripper.attach(10);// attaches the servo on pin 9 to the servo object
  servoGripper.write(90);
  pinMode(encoderLeft, INPUT);
  pinMode(encoderRight,INPUT);
  pinMode(LS, INPUT);
  pinMode(RS, INPUT);
  pinMode(LEFTSERVO, OUTPUT);
  pinMode(RIGHTSERVO, OUTPUT);
    Serial.begin(9600);
 

}

void loop() {
 Groundmovement();
 Hilldodging();
}
